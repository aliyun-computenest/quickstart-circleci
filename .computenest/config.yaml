Service:
  RegionId: cn-hangzhou
  DeployType: ros
  DeployMetadata:
    ServiceInstanceNameRule:
      Prefix: zabbix-
    TemplateConfigs:
      - Name: 单机版
        Url: 'ros_templates/template.yaml'
        AllowedRegions:
          - cn-qingdao
          - cn-beijing
          - cn-zhangjiakou
          - cn-huhehaote
          - cn-wulanchabu
          - cn-hangzhou
          - cn-shanghai
          - cn-shenzhen
          - cn-chengdu
          - cn-heyuan
          - cn-guangzhou
          - cn-hongkong
          - ap-northeast-1
          - ap-southeast-1
          - ap-southeast-3
          - ap-southeast-5
          - ap-southeast-6
          - us-east-1
          - us-west-1
          - eu-west-1
          - eu-central-1
          - me-east-1
          - me-central-1
          - cn-nanjing
          - cn-fuzhou
          - ap-southeast-7
          - ap-northeast-2
          - cn-wuhan-lr
  ServiceType: private
  ServiceInfo:
    - Name: Zabbix 社区版
      Locale: zh-CN
      ShortDescription: Zabbix是一款开源的企业级监控解决方案，用于监控多种IT基础设施组件，包括网络设备、服务器、虚拟机和云服务。其主要功能涵盖性能监控、资源使用情况监控以及故障检测和通知。
      Image: 'resources/icons/zabbix.jpg'
    - Name: Zabbix Community Edition
      Locale: en-US
      ShortDescription: Zabbix is an open source enterprise-level monitoring solution for monitoring a variety of IT infrastructure components, including network devices, servers, virtual machines, and cloud services. Its main functions include performance monitoring, resource usage monitoring, and fault detection and notification.
      Image: 'resources/icons/zabbix.jpg'
Artifact:
  EcsImage:
    ArtifactType: EcsImage
    ArtifactName: cloudreve
    Description: cloudreve
    ArtifactProperty:
      RegionId: ${ImageBuilder.EcsImage.RegionId}
      ImageId: ${ImageBuilder.EcsImage.SourceImageId}
    SupportRegionIds:
      - cn-qingdao
      - cn-beijing
      - cn-zhangjiakou
      - cn-huhehaote
      - cn-wulanchabu
      - cn-hangzhou
      - cn-shanghai
      - cn-shenzhen
      - cn-chengdu
      - cn-heyuan
      - cn-guangzhou
      - cn-hongkong
      - ap-northeast-1
      - ap-southeast-1
      - ap-southeast-3
      - ap-southeast-5
      - ap-southeast-6
      - us-east-1
      - us-west-1
      - eu-west-1
      - eu-central-1
      - me-east-1
      - me-central-1
      - cn-nanjing
      - cn-fuzhou
      - ap-southeast-7
      - ap-northeast-2
      - cn-wuhan-lr
ImageBuilder:
  EcsImage:
    RegionId: ap-southeast-1
    SourceImageId: centos_7_9_x64_20G_alibase_20240403.vhd
    SystemDiskSize: 20
    InstanceType: ecs.c6.large
    InternetMaxBandwidthOut: 10
    CommandType: RunShellScript
    Timeout: 10800
    Tags: [ ]
    CommandContent: |-
      #!/bin/bash
      sudo mkdir -p /etc/docker
      sudo tee /etc/docker/daemon.json <<-'EOF'
      {
          "registry-mirrors": [
              "https://0vmzj3q6.mirror.aliyuncs.com",
              "https://docker.m.daocloud.io",
              "https://mirror.baidubce.com",
              "https://dockerproxy.com",
              "https://mirror.iscas.ac.cn",
              "https://huecker.io",
              "https://dockerhub.timeweb.cloud",
              "https://noohub.ru",
              "https://vlgh0kqj.mirror.aliyuncs.com"
          ]
      }
      EOF
      sudo systemctl daemon-reload
      
      yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo
      yum makecache fast
      yum install -y git docker-ce jq
      systemctl enable docker
      systemctl start docker
      
      REPO_URL="https://github.com/aliyun-computenest/quickstart-zabbix"
      CLONE_DIR="/root/quickstart-zabbix"
      MAX_RETRIES=10  
      BASE_SLEEP_INTERVAL=5
      cd /root/
      attempt=0
      sleep_interval=$BASE_SLEEP_INTERVAL
      while [ $attempt -lt $MAX_RETRIES ]; do
        if git clone "$REPO_URL" "$CLONE_DIR"; then
          echo "仓库克隆成功！"
          cd ./quickstart-zabbix/docker_compose
          docker compose -f ./docker-compose_v3_centos_mysql_latest.yaml up -d
          ARGUS_VERSION=3.5.7 /bin/bash -c "$(curl -sS https://cms-agent-${RegionId}.oss-${RegionId}-internal.aliyuncs.com/Argus/agent_install_ecs-1.7.sh)" >> /root/install_cms_agent.log 2>&1
          exit 0
        else
          echo "失败的尝试 #$((attempt+1))，将在 $sleep_interval 秒后重试..."
          attempt=$((attempt+1))
          sleep $sleep_interval
          sleep_interval=$((sleep_interval + 5)) 
        fi
      done
      echo "多次尝试后仍然无法克隆仓库，请检查网络连接或仓库地址是否正确。"
      exit 1
      
      cat > /etc/systemd/system/zabbix.service <<EOF
      [Unit]
      Description=Pterodactyl Panel Service
      Requires=docker.service
      After=docker.service

      [Service]
      Type=oneshot
      RemainAfterExit=yes
      WorkingDirectory=/root
      ExecStart=/usr/bin/docker compose up -d -f /root/docker-compose_v3_centos_mysql_latest.yaml
      ExecStop=/usr/bin/docker compose down
      TimeoutStartSec=0

      [Install]
      WantedBy=multi-user.target
      EOF

      systemctl enable zabbix
      systemctl start zabbix